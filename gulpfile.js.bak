var gulp = require('gulp')
var gutil = require("gulp-util");
var named = require('vinyl-named')
var path  = require('path');
var sourcemaps = require('gulp-sourcemaps');
// 获取 uglify 模块（用于压缩 JS）
var uglify = require('gulp-uglify')


// webpack
var webpack = require('webpack')
//webpack config
var webpackConfig = require("./webpack.config.js");
// webpack dev server
var WebpackDevServer = require('webpack-dev-server');


var appList = ['App']


gulp.task('default', ['bundle'], function() {
    console.log('done')
});

// gulp.task("webpack:build", function(callback) {
//     // modify some webpack config options
//     var myConfig = Object.create(webpackConfig);
//     myConfig.plugins = myConfig.plugins.concat(
//         new webpack.DefinePlugin({
//             "process.env": {
//                 // This has effect on the react lib size
//                 "NODE_ENV": JSON.stringify("production")
//             }
//         }),
//         new webpack.optimize.DedupePlugin(),
//         new webpack.optimize.UglifyJsPlugin()
//     );
//
//     // run webpack
//     webpack(myConfig, function(err, stats) {
//         if(err) throw new gutil.PluginError("webpack:build", err);
//         gutil.log("[webpack:build]", stats.toString({
//             colors: true
//         }));
//         callback();
//     });
// });


// modify some webpack config options
var myDevConfig = Object.create(webpackConfig);
myDevConfig.devtool = "sourcemap";
// myDevConfig.debug = true

// create a single instance of the compiler to allow caching
var devCompiler = webpack(myDevConfig);

gulp.task("webpack:build-dev", function(callback) {
    // run webpack
    devCompiler.run(function(err, stats) {
        if(err) throw new gutil.PluginError("webpack:build-dev", err);
        gutil.log("[webpack:build-dev]", stats.toString({
            colors: true
        }));
        callback();
    });
});


//watch   files
var res = {
    vue:"src/view/*.vue",
    set:"src/view/Set/*.vue",
    cert:"src/view/Cert/*.vue",
    doctor:"src/view/Doctor/*.vue",
    sick:"src/view/Sick/*.vue",
    order:"src/view/Order/*.vue",
    balance:"src/view/Balance/*.vue",
    js:"src/js/*.js"
}

gulp.task("build-dev", ["webpack:build-dev"], function() {
    gulp.watch([res.vue,res.js,res.set,res.doctor,res.sick,res.order,res.balance,res.cert], ["webpack:build-dev"]);
});

gulp.task('script', function() {
    // 1. 找到文件
    gulp.src('dist/*.js')
    // 2. 压缩文件
        .pipe(uglify())
        // 3. 另存压缩后的文件
        .pipe(gulp.dest('dist/min'))
})

// var minify = require('gulp-minify');


gulp.task("webpack-dev-server", function(callback) {
    // modify some webpack config options
    var myConfig = Object.create(webpackConfig);
    myConfig.devtool = "eval";
    myConfig.debug = true;

    // Start a webpack-dev-server
    new WebpackDevServer(webpack(myConfig), {
        publicPath: "/" + myConfig.output.publicPath,
        stats: {
            colors: true
        },
        hot:true,
        proxy: {
            "/api": {
                target: "http://jsonplaceholder.typicode.com/",
                changeOrigin: true,
                pathRewrite: {
                    "^/api": ""
                },
                bypass: function (req) {
                    if (req.url === "/api/nope") {
                        return "/bypass.html";
                    }
                }
            },
            "/adminWeb":{
                target: "http://116.62.7.65:8080/",
                changeOrigin: true,
            },

        }
    }).listen(8080, "localhost", function(err) {
        if(err) throw new gutil.PluginError("webpack-dev-server", err);
        gutil.log("[webpack-dev-server]", "http://localhost:8080/webpack-dev-server/index.html");
    });
});



/**
 * @private
 */
function mapFiles(list, extname) {
    return list.map(function (app) {return 'src/js/' + app + '.' + extname})
}